.hljs {
    color: var(--syntax-text);
}

.hljs-doctag,
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-template-tag,
.hljs-template-variable,
.hljs-type,
.hljs-variable.language_ {
    color: var(--syntax-keyword);
}

.hljs-title,
.hljs-title.class_,
.hljs-title.class_.inherited__,
.hljs-title.function_ {
    color: var(--syntax-entity);
}

.hljs-attr,
.hljs-attribute,
.hljs-literal,
.hljs-meta,
.hljs-number,
.hljs-operator,
.hljs-variable,
.hljs-selector-attr,
.hljs-selector-class,
.hljs-selector-id {
    color: var(--syntax-constant);
}

.hljs-regexp,
.hljs-string,
.hljs-meta .hljs-string {
    color: var(--syntax-string);
}

.hljs-built_in,
.hljs-symbol {
    color: var(--syntax-symbol);
    font-style: bold;
}

.hljs-comment,
.hljs-code,
.hljs-formula {
    color: var(--syntax-comment);
    font-style: italic;
}

.hljs-name,
.hljs-quote,
.hljs-selector-tag,
.hljs-selector-pseudo {
    color: var(--syntax-entity-tag);
}

.hljs-subst {
    color: var(--syntax-storage-modifier-import);
}

.hljs-section {
    color: var(--syntax-markup-heading);
    font-weight: bold;
}

.hljs-bullet {
    color: var(--syntax-markup-bullet);
}

.hljs-emphasis {
    color: var(--syntax-markup-italic);
    font-style: italic;
}

.hljs-strong {
    color: var(--syntax-markup-bold);
    font-weight: bold;
}

.hljs-addition {
    color: var(--syntax-markup-inserted-fg);
    background-color: var(--syntax-markup-inserted-bg);
}

.hljs-deletion {
    color: var(--syntax-markup-deleted-fg);
    background-color: var(--syntax-markup-deleted-bg);
}

.hljs-char.escape_,
.hljs-link,
.hljs-params,
.hljs-property,
.hljs-punctuation,
.hljs-tag {
    /* purposely ignored */
    color: inherit;
}
